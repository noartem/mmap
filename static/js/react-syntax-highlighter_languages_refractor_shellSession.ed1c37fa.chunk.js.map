{"version":3,"sources":["../node_modules/refractor/lang/shell-session.js"],"names":["shellSession","Prism","strings","source","join","languages","info","pattern","alias","inside","path","lookbehind","user","punctuation","command","RegExp","replace","greedy","bash","output","module","exports","displayName","aliases"],"mappings":"gGAKA,SAASA,EAAaC,IACnB,SAAWA,GAGV,IAAIC,EAAU,CAGZ,wDAAwDC,OAExD,qDAAqDA,OAErD,4DAA4DA,QAC5DC,KAAK,KACPH,EAAMI,UAAU,iBAAmB,CACjCC,KAAM,CAGJC,QAAS,yBACTC,MAAO,cACPC,OAAQ,CACNC,KAAM,CACJH,QAAS,aACTI,YAAY,GAEdC,KAAM,0CACNC,YAAa,MAGjBC,QAAS,CACPP,QAASQ,OACP,oCAAoCZ,OAAOa,QACzC,YACA,WACE,OAAOd,MAIbe,QAAQ,EACRR,OAAQ,CACNS,KAAM,CACJX,QAAS,oBACTI,YAAY,EACZH,MAAO,gBACPC,OAAQR,EAAMI,UAAUa,MAE1B,eAAgB,CACdX,QAAS,QACTC,MAAO,eAIbW,OAAQ,2BAlDX,CAoDElB,GAxDLmB,EAAOC,QAAUrB,EACjBA,EAAasB,YAAc,eAC3BtB,EAAauB,QAAU","file":"static/js/react-syntax-highlighter_languages_refractor_shellSession.ed1c37fa.chunk.js","sourcesContent":["'use strict'\n\nmodule.exports = shellSession\nshellSession.displayName = 'shellSession'\nshellSession.aliases = []\nfunction shellSession(Prism) {\n  ;(function (Prism) {\n    // CAREFUL!\n    // The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\n    var strings = [\n      // normal string\n      // 1 capturing group\n      /([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/.source, // here doc\n      // 1 capturing group\n      /<<-?\\s*(\\w+?)\\s*(?:\\r?\\n|\\r)[\\s\\S]*?(?:\\r?\\n|\\r)\\2/.source, // here doc quoted\n      // 2 capturing group\n      /<<-?\\s*([\"'])(\\w+)\\3\\s*(?:\\r?\\n|\\r)[\\s\\S]*?(?:\\r?\\n|\\r)\\4/.source\n    ].join('|')\n    Prism.languages['shell-session'] = {\n      info: {\n        // foo@bar:~/files$ exit\n        // foo@bar$ exit\n        pattern: /^[^\\r\\n$#*!]+(?=[$#])/m,\n        alias: 'punctuation',\n        inside: {\n          path: {\n            pattern: /(:)[\\s\\S]+/,\n            lookbehind: true\n          },\n          user: /^[^\\s@:$#*!/\\\\]+@[^\\s@:$#*!/\\\\]+(?=:|$)/,\n          punctuation: /:/\n        }\n      },\n      command: {\n        pattern: RegExp(\n          /[$#](?:[^\\\\\\r\\n'\"<]|\\\\.|<<str>>)+/.source.replace(\n            /<<str>>/g,\n            function () {\n              return strings\n            }\n          )\n        ),\n        greedy: true,\n        inside: {\n          bash: {\n            pattern: /(^[$#]\\s*)[\\s\\S]+/,\n            lookbehind: true,\n            alias: 'language-bash',\n            inside: Prism.languages.bash\n          },\n          'shell-symbol': {\n            pattern: /^[$#]/,\n            alias: 'important'\n          }\n        }\n      },\n      output: /.(?:.*(?:\\r\\n?|\\n|.$))*/\n    }\n  })(Prism)\n}\n"],"sourceRoot":""}