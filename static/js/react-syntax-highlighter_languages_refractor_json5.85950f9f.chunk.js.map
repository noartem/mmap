{"version":3,"sources":["../node_modules/refractor/lang/json.js","../node_modules/refractor/lang/json5.js"],"names":["json","Prism","languages","property","pattern","greedy","string","comment","number","punctuation","operator","boolean","null","alias","module","exports","displayName","aliases","refractorJson","require","json5","register","extend","RegExp","source"],"mappings":"kGAKA,SAASA,EAAKC,GACZA,EAAMC,UAAUF,KAAO,CACrBG,SAAU,CACRC,QAAS,gCACTC,QAAQ,GAEVC,OAAQ,CACNF,QAAS,gCACTC,QAAQ,GAEVE,QAAS,gCACTC,OAAQ,6BACRC,YAAa,WACbC,SAAU,IACVC,QAAS,qBACTC,KAAM,CACJR,QAAS,WACTS,MAAO,YApBbC,EAAOC,QAAUf,EACjBA,EAAKgB,YAAc,OACnBhB,EAAKiB,QAAU,I,iCCHf,IAAIC,EAAgBC,EAAQ,KAI5B,SAASC,EAAMnB,GACbA,EAAMoB,SAASH,GACd,SAAWjB,GACV,IAAIK,EAAS,+CACbL,EAAMC,UAAUkB,MAAQnB,EAAMC,UAAUoB,OAAO,OAAQ,CACrDnB,SAAU,CACR,CACEC,QAASmB,OAAOjB,EAAOkB,OAAS,aAChCnB,QAAQ,GAEV,CACED,QAAS,iDACTS,MAAO,aAGXP,OAAQ,CACNF,QAASE,EACTD,QAAQ,GAEVG,OAAQ,6EAjBX,CAmBEP,GAxBLa,EAAOC,QAAUK,EACjBA,EAAMJ,YAAc,QACpBI,EAAMH,QAAU","file":"static/js/react-syntax-highlighter_languages_refractor_json5.85950f9f.chunk.js","sourcesContent":["'use strict'\n\nmodule.exports = json\njson.displayName = 'json'\njson.aliases = []\nfunction json(Prism) {\n  Prism.languages.json = {\n    property: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n      greedy: true\n    },\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    number: /-?\\d+\\.?\\d*(?:e[+-]?\\d+)?/i,\n    punctuation: /[{}[\\],]/,\n    operator: /:/,\n    boolean: /\\b(?:true|false)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    }\n  }\n}\n","'use strict'\nvar refractorJson = require('./json.js')\nmodule.exports = json5\njson5.displayName = 'json5'\njson5.aliases = []\nfunction json5(Prism) {\n  Prism.register(refractorJson)\n  ;(function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n?|\\n|.)|(?!\\1)[^\\\\\\r\\n])*\\1/\n    Prism.languages.json5 = Prism.languages.extend('json', {\n      property: [\n        {\n          pattern: RegExp(string.source + '(?=\\\\s*:)'),\n          greedy: true\n        },\n        {\n          pattern: /[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*:)/,\n          alias: 'unquoted'\n        }\n      ],\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      number: /[+-]?(?:NaN|Infinity|0x[a-fA-F\\d]+|(?:\\d+\\.?\\d*|\\.\\d+)(?:[eE][+-]?\\d+)?)/\n    })\n  })(Prism)\n}\n"],"sourceRoot":""}