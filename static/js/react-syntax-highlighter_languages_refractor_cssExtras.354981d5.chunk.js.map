{"version":3,"sources":["../node_modules/refractor/lang/css-extras.js"],"names":["cssExtras","Prism","selectorInside","string","languages","css","selector","pattern","inside","class","id","attribute","RegExp","source","greedy","punctuation","lookbehind","alias","namespace","value","operator","number","insertBefore","variable","unit","hexcode","color","function","entity","module","exports","displayName","aliases"],"mappings":"+FAKA,SAASA,EAAUC,IAChB,SAAWA,GACV,IACIC,EADAC,EAAS,gDAEbF,EAAMG,UAAUC,IAAIC,SAAW,CAC7BC,QAASN,EAAMG,UAAUC,IAAIC,SAC7BE,OAASN,EAAiB,CACxB,iBAAkB,+DAClB,eAAgB,UAChBO,MAAO,aACPC,GAAI,YACJC,UAAW,CACTJ,QAASK,OAAO,oBAAsBT,EAAOU,OAAS,SACtDC,QAAQ,EACRN,OAAQ,CACNO,YAAa,UACb,mBAAoB,CAClBR,QAAS,aACTS,YAAY,EACZC,MAAO,WAETC,UAAW,CACTX,QAAS,kCACTS,YAAY,EACZR,OAAQ,CACNO,YAAa,QAGjBJ,UAAW,CACTJ,QAAS,0BACTS,YAAY,GAEdG,MAAO,CACLhB,EACA,CACEI,QAAS,kCACTS,YAAY,IAGhBI,SAAU,cAGd,OAAQ,CACN,CACEb,QAAS,kDACTS,YAAY,EACZR,OAAQ,CACNa,OAAQ,SACRD,SAAU,SAGd,CACEb,QAAS,gCACTS,YAAY,IAGhBD,YAAa,SAGjBd,EAAMG,UAAUC,IAAhB,OAA8BG,OAC5B,8BACAA,OAASN,EACXD,EAAMG,UAAUkB,aAAa,MAAO,WAAY,CAC9CC,SAAU,CACRhB,QAAS,8DACTS,YAAY,KAGhB,IAAIQ,EAAO,CACTjB,QAAS,mBACTS,YAAY,GAEVK,EAAS,CACXd,QAAS,yBACTS,YAAY,GAEdf,EAAMG,UAAUkB,aAAa,MAAO,WAAY,CAC9CF,SAAU,CACRb,QAAS,qBACTS,YAAY,GAIdS,QAAS,CACPlB,QAAS,8BACTU,MAAO,SAETS,MAAO,CACL,q5CACA,CACEnB,QAAS,4JACTC,OAAQ,CACNgB,KAAMA,EACNH,OAAQA,EACRM,SAAU,eACVZ,YAAa,WAInBa,OAAQ,kBACRJ,KAAMA,EACNH,OAAQA,IApGX,CAsGEpB,GA1GL4B,EAAOC,QAAU9B,EACjBA,EAAU+B,YAAc,YACxB/B,EAAUgC,QAAU","file":"static/js/react-syntax-highlighter_languages_refractor_cssExtras.354981d5.chunk.js","sourcesContent":["'use strict'\n\nmodule.exports = cssExtras\ncssExtras.displayName = 'cssExtras'\ncssExtras.aliases = []\nfunction cssExtras(Prism) {\n  ;(function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\n    var selectorInside\n    Prism.languages.css.selector = {\n      pattern: Prism.languages.css.selector,\n      inside: (selectorInside = {\n        'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n        'pseudo-class': /:[-\\w]+/,\n        class: /\\.[-:.\\w]+/,\n        id: /#[-:.\\w]+/,\n        attribute: {\n          pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n          greedy: true,\n          inside: {\n            punctuation: /^\\[|\\]$/,\n            'case-sensitivity': {\n              pattern: /(\\s)[si]$/i,\n              lookbehind: true,\n              alias: 'keyword'\n            },\n            namespace: {\n              pattern: /^(\\s*)[-*\\w\\xA0-\\uFFFF]*\\|(?!=)/,\n              lookbehind: true,\n              inside: {\n                punctuation: /\\|$/\n              }\n            },\n            attribute: {\n              pattern: /^(\\s*)[-\\w\\xA0-\\uFFFF]+/,\n              lookbehind: true\n            },\n            value: [\n              string,\n              {\n                pattern: /(=\\s*)[-\\w\\xA0-\\uFFFF]+(?=\\s*$)/,\n                lookbehind: true\n              }\n            ],\n            operator: /[|~*^$]?=/\n          }\n        },\n        'n-th': [\n          {\n            pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n            lookbehind: true,\n            inside: {\n              number: /[\\dn]+/,\n              operator: /[+-]/\n            }\n          },\n          {\n            pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n            lookbehind: true\n          }\n        ],\n        punctuation: /[()]/\n      })\n    }\n    Prism.languages.css['atrule'].inside[\n      'selector-function-argument'\n    ].inside = selectorInside\n    Prism.languages.insertBefore('css', 'property', {\n      variable: {\n        pattern: /(^|[^-\\w\\xA0-\\uFFFF])--[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*/i,\n        lookbehind: true\n      }\n    })\n    var unit = {\n      pattern: /(\\d)(?:%|[a-z]+)/,\n      lookbehind: true\n    } // 123 -123 .123 -.123 12.3 -12.3\n    var number = {\n      pattern: /(^|[^\\w.-])-?\\d*\\.?\\d+/,\n      lookbehind: true\n    }\n    Prism.languages.insertBefore('css', 'function', {\n      operator: {\n        pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n        lookbehind: true\n      },\n      // CAREFUL!\n      // Previewers and Inline color use hexcode and color.\n      hexcode: {\n        pattern: /\\B#(?:[\\da-f]{1,2}){3,4}\\b/i,\n        alias: 'color'\n      },\n      color: [\n        /\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i,\n        {\n          pattern: /\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n          inside: {\n            unit: unit,\n            number: number,\n            function: /[\\w-]+(?=\\()/,\n            punctuation: /[(),]/\n          }\n        }\n      ],\n      entity: /\\\\[\\da-f]{1,8}/i,\n      unit: unit,\n      number: number\n    })\n  })(Prism)\n}\n"],"sourceRoot":""}